/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LotteryContract,
  LotteryContractInterface,
} from "../LotteryContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_drawerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyMultipleRandomTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161017138038061017183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b60df806100926000396000f3fe608060405260043610601c5760003560e01c80635d091f38146021575b600080fd5b6030602c3660046091565b6032565b005b600054604051630ba123e760e31b8152600481018390526001600160a01b0390911690635d091f3890602401600060405180830381600087803b158015607757600080fd5b505af1158015608a573d6000803e3d6000fd5b5050505050565b60006020828403121560a257600080fd5b503591905056fea2646970667358221220c1718c7b41279d88baf573c15bda3566edc886b3799b489c342408741b2af0c564736f6c63430008060033";

export class LotteryContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _drawerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LotteryContract> {
    return super.deploy(
      _drawerAddress,
      overrides || {}
    ) as Promise<LotteryContract>;
  }
  getDeployTransaction(
    _drawerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_drawerAddress, overrides || {});
  }
  attach(address: string): LotteryContract {
    return super.attach(address) as LotteryContract;
  }
  connect(signer: Signer): LotteryContract__factory {
    return super.connect(signer) as LotteryContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryContractInterface {
    return new utils.Interface(_abi) as LotteryContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryContract {
    return new Contract(address, _abi, signerOrProvider) as LotteryContract;
  }
}
