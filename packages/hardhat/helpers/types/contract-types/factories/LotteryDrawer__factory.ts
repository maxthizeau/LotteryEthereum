/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LotteryDrawer, LotteryDrawerInterface } from "../LotteryDrawer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_LTY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "LTY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllDraws",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getCurrentDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDrawToTickets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "_getTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "uint256",
            name: "drawNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct LotteryFactory.Ticket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "_getTicketsByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyLottyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyMultipleRandomTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTicketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "draws",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rewardBalanceAtDraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomGenerator",
    outputs: [
      {
        internalType: "contract IRandomNumberGenerator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_IRandomNumberGenerator",
        type: "address",
      },
    ],
    name: "setRandomNumberGenerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setTicketPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "drawNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "viewTicket",
    outputs: [
      {
        internalType: "uint8[5]",
        name: "",
        type: "uint8[5]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526611c37937e0800060045560006005556000600655600060075560006008553480156200003057600080fd5b5060405162002595380380620025958339810160408190526200005391620003d2565b806200005f3362000211565b600180546001600160a01b039092166001600160a01b03199283168117825560028054909316179091556040805160c08082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905287518087018952858152808501869052808901869052808401869052808301869052808201869052885160e081018a5286815289518084018b52878152808701889052808b0188905280860188905280850188905295810195865298890186905292880185905290870186905286018190524293860193909352600f805496870181559091528351600c9095027f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802810195865590519294919392620001a9917f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8030190600562000261565b50604082015160028201805460ff1916911515919091179055606082015160038201556080820151620001e39060048301906006620002fb565b5060a0820151620001fb90600a83019060066200032c565b5060c082015181600b0155505050505062000404565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620002e95791602002820160005b83821115620002b857835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030262000278565b8015620002e75782816101000a81549060ff0219169055600101602081600001049283019260010302620002b8565b505b50620002f7929150620003bb565b5090565b8260068101928215620002e9579160200282015b82811115620002e95782518255916020019190600101906200030f565b600183019183908215620002e95791602002820160005b838211156200038957835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000343565b8015620002e75782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000389565b5b80821115620002f75760008155600101620003bc565b600060208284031215620003e557600080fd5b81516001600160a01b0381168114620003fd57600080fd5b9392505050565b61218180620004146000396000f3fe6080604052600436106101815760003560e01c80636b9a7d01116100d1578063b12e29df1161008a578063dcbad90d11610064578063dcbad90d146104cf578063efff5e2f146104ef578063f2fde38b14610504578063fbbad3cd1461052457600080fd5b8063b12e29df14610479578063c6f6d9d914610499578063d07f8a43146104af57600080fd5b80636b9a7d01146103a8578063715018a6146103d75780638da5cb5b146103ec5780639f52d8be1461040a5780639f59dc7c1461042c578063ab35893d1461045957600080fd5b80632dcb451f1161013e57806350b447121161011857806350b447121461030657806354e3c24f1461033b5780635b472e301461035b5780635d091f381461038857600080fd5b80632dcb451f146102945780633ccfd60b146102d157806347810b3e146102e657600080fd5b806301b08410146101865780630cc36c36146101905780631209b1f6146101d557806315981650146101f9578063272b0ee5146102195780632b08e82414610246575b600080fd5b61018e610546565b005b34801561019c57600080fd5b506101b06101ab366004611cd3565b61077a565b6040805194855292151560208501529183015260608201526080015b60405180910390f35b3480156101e157600080fd5b506101eb60045481565b6040519081526020016101cc565b34801561020557600080fd5b5061018e610214366004611cd3565b6107b7565b34801561022557600080fd5b50610239610234366004611cd3565b6107e6565b6040516101cc9190611f46565b34801561025257600080fd5b5061027c610261366004611cd3565b600b602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101cc565b3480156102a057600080fd5b506102a9610887565b604080519586526020860194909452928401919091526060830152608082015260a0016101cc565b3480156102dd57600080fd5b5061018e610928565b3480156102f257600080fd5b5060015461027c906001600160a01b031681565b34801561031257600080fd5b50610326610321366004611cd3565b6109f5565b604080519283529015156020830152016101cc565b34801561034757600080fd5b506101eb610356366004611d05565b610a29565b34801561036757600080fd5b506101eb610376366004611cd3565b600d6020526000908152604090205481565b34801561039457600080fd5b5061018e6103a3366004611cd3565b610a5a565b3480156103b457600080fd5b506103c86103c3366004611cd3565b610d49565b6040516101cc93929190611ede565b3480156103e357600080fd5b5061018e610e03565b3480156103f857600080fd5b506000546001600160a01b031661027c565b34801561041657600080fd5b5061041f610e39565b6040516101cc9190611f37565b34801561043857600080fd5b5061044c610447366004611c81565b610f9f565b6040516101cc9190611ea6565b34801561046557600080fd5b5061041f610474366004611cd3565b611077565b34801561048557600080fd5b5061044c610494366004611cd3565b6111d3565b3480156104a557600080fd5b506101eb60035481565b3480156104bb57600080fd5b5061018e6104ca366004611c81565b611235565b3480156104db57600080fd5b5060095461027c906001600160a01b031681565b3480156104fb57600080fd5b506101eb611281565b34801561051057600080fd5b5061018e61051f366004611c81565b61133a565b34801561053057600080fd5b506105396113d2565b6040516101cc9190611e57565b6000341161055357600080fd5b6002546040805163313ce56760e01b8152905134926000926001600160a01b039091169163313ce56791600480820192602092909190829003018186803b15801561059d57600080fd5b505afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190611d27565b6105e090600a611fe3565b6004546105ee9084906115ce565b6105f8919061208e565b60408051808201825260158152746d696e7428616464726573732c75696e743235362960581b60209182015260015482513360248201526044808201869052845180830390910181526064909101845291820180516001600160e01b03166340c10f1960e01b17905291519293507f40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f28429260009283926001600160a01b03909116916106a39190611e1c565b6000604051808303816000865af19150503d80600081146106e0576040519150601f19603f3d011682016040523d82523d6000602084013e6106e5565b606091505b509150915081801561070f57508051158061070f57508080602001905181019061070f9190611cb1565b6107735760405162461bcd60e51b815260206004820152602a60248201527f4c6f7474657279466163746f72793a3a6275794c6f747479546f6b656e3a206d6044820152691a5b9d0819985a5b195960b21b60648201526084015b60405180910390fd5b5050505050565b600f818154811061078a57600080fd5b60009182526020909120600c90910201805460028201546003830154600b9093015491935060ff16919084565b6000546001600160a01b031633146107e15760405162461bcd60e51b815260040161076a90611f02565b600455565b6107ee611b27565b600a82815481106108015761080161211f565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610831575050509284525050506001820154602082015260029091015460ff16151560409091015292915050565b6002546040516370a0823160e01b815230600482015260009182918291829182916001600160a01b0316906370a082319060240160206040518083038186803b1580156108d357600080fd5b505afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b9190611cec565b600554600654600754600854945094509450945094509091929394565b6000546001600160a01b031633146109525760405162461bcd60e51b815260040161076a90611f02565b600080546006546040516001600160a01b03909216918381818185875af1925050503d80600081146109a0576040519150601f19603f3d011682016040523d82523d6000602084013e6109a5565b606091505b505060006006559050806109f25760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161076a565b50565b600a8181548110610a0557600080fd5b60009182526020909120600390910201600181015460029091015490915060ff1682565b600c6020528160005260406000208181548110610a4557600080fd5b90600052602060002001600091509150505481565b610a656001826120df565b15610ae75760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a2063616e6e6f7420627579206672616374696f6e206f66206064820152651d1a58dad95d60d21b608482015260a40161076a565b610af981670de0b6b3a764000061208e565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611cec565b1015610bf75760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f75677468204c545920746f20627579206064820152651d1a58dad95d60d21b608482015260a40161076a565b610c0981670de0b6b3a764000061208e565b600254604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b158015610c5257600080fd5b505afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a9190611cec565b1015610cfe5760405162461bcd60e51b815260206004820152603e60248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f7567746820616c6c6f77616e63650000606482015260840161076a565b60005b81811015610d4557610d1333826115e3565b600154610d33906001600160a01b03163330670de0b6b3a764000061174b565b80610d3d816120c4565b915050610d01565b5050565b610d51611b4e565b6000806000600a8581548110610d6957610d6961211f565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610d9957505050928452505050600182015460208083019190915260029092015460ff1615156040918201528251918301519201519097919650945092505050565b6000546001600160a01b03163314610e2d5760405162461bcd60e51b815260040161076a90611f02565b610e376000611889565b565b610e41611b6c565b600f8054610e509060016118d9565b81548110610e6057610e6061211f565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610ea257505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b815481526020019060010190808311610f105750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411610f4b57905050505050508152602001600b82015481525050905090565b6001600160a01b0381166000908152600e60205260408120546060919067ffffffffffffffff811115610fd457610fd4612135565b604051908082528060200260200182016040528015610ffd578160200160208202803683370190505b5090506000805b600a5481101561106e576000818152600b60205260409020546001600160a01b038681169116141561105c57808383815181106110435761104361211f565b60209081029190910101526110598260016118e5565b91505b80611066816120c4565b915050611004565b50909392505050565b61107f611b6c565b600f82815481106110925761109261211f565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116110d457505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b8154815260200190600101908083116111425750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161117d57905050505050508152602001600b820154815250509050919050565b6000818152600c602090815260409182902080548351818402810184019094528084526060939283018282801561122957602002820191906000526020600020905b815481526020019060010190808311611215575b50505050509050919050565b6000546001600160a01b0316331461125f5760405162461bcd60e51b815260040161076a90611f02565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6006546008546007546005546002546040516370a0823160e01b8152306004820152600095949392916001600160a01b0316906370a082319060240160206040518083038186803b1580156112d557600080fd5b505afa1580156112e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130d9190611cec565b61131791906120ad565b61132191906120ad565b61132b91906120ad565b61133591906120ad565b905090565b6000546001600160a01b031633146113645760405162461bcd60e51b815260040161076a90611f02565b6001600160a01b0381166113c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161076a565b6109f281611889565b600f5460609060009067ffffffffffffffff8111156113f3576113f3612135565b60405190808252806020026020018201604052801561142c57816020015b611419611b6c565b8152602001906001900390816114115790505b5090506000805b600f548110156115c657600f81815481106114505761145061211f565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161149257505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b8154815260200190600101908083116115005750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161153b57905050505050508152602001600b8201548152505083838151811061159c5761159c61211f565b60209081029190910101526115b28260016118e5565b9150806115be816120c4565b915050611433565b509092915050565b60006115da8284611f8c565b90505b92915050565b60035460006115fa6115f58484611f74565b6118f1565b60408051606081018252828152602081018590526000918101829052600a8054600181018255925280519293509160039091027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8019061165d9082906005611bbb565b5060208201516001828101919091556040909201516002909101805460ff1916911515919091179055600a5460009161169691906118d9565b6000818152600b6020908152604080832080546001600160a01b0319166001600160a01b038b16179055868352600c825280832080546001818101835591855283852001859055878452600d909252909120549192506116f691906118e5565b6000848152600d60209081526040808320939093556001600160a01b0388168252600e905220546117289060016118e5565b6001600160a01b039095166000908152600e602052604090209490945550505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916117af9190611e1c565b6000604051808303816000865af19150503d80600081146117ec576040519150601f19603f3d011682016040523d82523d6000602084013e6117f1565b606091505b509150915081801561181b57508051158061181b57508080602001905181019061181b9190611cb1565b6118815760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b606482015260840161076a565b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006115da82846120ad565b60006115da8284611f74565b6118f9611b4e565b611901611b4e565b604080516103208101825260018152600260208201526003918101919091526004606082015260056080820152600660a0820152600760c0820152600860e08201526009610100820152600a610120820152600b610140820152600c610160820152600d610180820152600e6101a0820152600f6101c082015260106101e08201526011610200820152601261022082015260136102408201526014610260820152601561028082015260166102a082015260176102c082015260186102e08201526019610300820152600090815b6005811015611ac8576040516bffffffffffffffffffffffff193360601b16602082015242603482015260548101829052607481018490526094810187905260009060199060b4016040516020818303038152906040528051906020012060001c611a3b91906120df565b9050828160198110611a4f57611a4f61211f565b6020020151838360198110611a6657611a6661211f565b6020020151848460198110611a7d57611a7d61211f565b60200201858460198110611a9357611a9361211f565b60ff93841660209190910291909101529116905283611ab1816120c4565b945050508080611ac0906120c4565b9150506119d0565b5060005b6005811015611b1d57818160198110611ae757611ae761211f565b6020020151848260058110611afe57611afe61211f565b60ff909216602092909202015280611b15816120c4565b915050611acc565b5091949350505050565b6040518060600160405280611b3a611b4e565b815260006020820181905260409091015290565b6040518060a001604052806005906020820280368337509192915050565b6040518060e0016040528060008152602001611b86611b4e565b81526000602082018190526040820152606001611ba1611c4e565b8152602001611bae611c4e565b8152602001600081525090565b600183019183908215611c3e5791602002820160005b83821115611c0f57835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611bd1565b8015611c3c5782816101000a81549060ff0219169055600101602081600001049283019260010302611c0f565b505b50611c4a929150611c6c565b5090565b6040518060c001604052806006906020820280368337509192915050565b5b80821115611c4a5760008155600101611c6d565b600060208284031215611c9357600080fd5b81356001600160a01b0381168114611caa57600080fd5b9392505050565b600060208284031215611cc357600080fd5b81518015158114611caa57600080fd5b600060208284031215611ce557600080fd5b5035919050565b600060208284031215611cfe57600080fd5b5051919050565b60008060408385031215611d1857600080fd5b50508035926020909101359150565b600060208284031215611d3957600080fd5b815160ff81168114611caa57600080fd5b8060005b6006811015611d7357815163ffffffff16845260209384019390910190600101611d4e565b50505050565b8060005b6005811015611d7357815160ff16845260209384019390910190600101611d7d565b80518252602080820151611db582850182611d79565b506040820151151560c0840152606082015160e08401526080820151610100840160005b6006811015611df657825182529183019190830190600101611dd9565b5050505060a0810151611e0d6101c0840182611d4a565b5060c001516102809190910152565b6000825160005b81811015611e3d5760208186018101518583015201611e23565b81811115611e4c576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611e9a57611e86838551611d9f565b928401926102a09290920191600101611e73565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611e9a57835183529284019291840191600101611ec2565b60e08101611eec8286611d79565b8360a083015282151560c0830152949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6102a081016115dd8284611d9f565b600060e082019050611f59828451611d79565b602083015160a0830152604090920151151560c09091015290565b60008219821115611f8757611f876120f3565b500190565b600082611f9b57611f9b612109565b500490565b600181815b80851115611fdb578160001904821115611fc157611fc16120f3565b80851615611fce57918102915b93841c9390800290611fa5565b509250929050565b60006115da60ff841683600082611ffc575060016115dd565b81612009575060006115dd565b816001811461201f576002811461202957612045565b60019150506115dd565b60ff84111561203a5761203a6120f3565b50506001821b6115dd565b5060208310610133831016604e8410600b8410161715612068575081810a6115dd565b6120728383611fa0565b8060001904821115612086576120866120f3565b029392505050565b60008160001904831182151516156120a8576120a86120f3565b500290565b6000828210156120bf576120bf6120f3565b500390565b60006000198214156120d8576120d86120f3565b5060010190565b6000826120ee576120ee612109565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212203a500c3cb954bfa1f429b2f74542bc32e77e70bd01e94f3c38d5789467103f3464736f6c63430008060033";

export class LotteryDrawer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LotteryDrawer> {
    return super.deploy(_LTY, overrides || {}) as Promise<LotteryDrawer>;
  }
  getDeployTransaction(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_LTY, overrides || {});
  }
  attach(address: string): LotteryDrawer {
    return super.attach(address) as LotteryDrawer;
  }
  connect(signer: Signer): LotteryDrawer__factory {
    return super.connect(signer) as LotteryDrawer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryDrawerInterface {
    return new utils.Interface(_abi) as LotteryDrawerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryDrawer {
    return new Contract(address, _abi, signerOrProvider) as LotteryDrawer;
  }
}
