/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_LTY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "LTY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllDraws",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getCurrentDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "_getCurrentDrawTicketsOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDrawToTickets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "_getTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "uint256",
            name: "drawNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct LotteryFactory.Ticket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "_getTicketsByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getTicketsOfOwnerForDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "uint256",
            name: "drawNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
          {
            internalType: "enum LotteryFactory.TicketStatus",
            name: "ticketStatus",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rewardsAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryClaimer.TicketWithInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyLottyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyMultipleRandomTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "draw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTicketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "draws",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rewardBalanceAtDraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getClaimableAmountOfAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "getClaimableAmountOfTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "getTicketWithRewardsAndStatus",
    outputs: [
      {
        internalType: "uint8[5]",
        name: "",
        type: "uint8[5]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "enum LotteryFactory.TicketStatus",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "needToDraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLotteryAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomGenerator",
    outputs: [
      {
        internalType: "contract IRandomNumberGenerator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDelay",
        type: "uint256",
      },
    ],
    name: "setDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_IRandomNumberGenerator",
        type: "address",
      },
    ],
    name: "setRandomNumberGenerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setTicketPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "drawNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "viewTicket",
    outputs: [
      {
        internalType: "uint8[5]",
        name: "",
        type: "uint8[5]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526611c37937e08000600455600060055560006006556000600755600060085560786010553480156200003557600080fd5b5060405162003e8838038062003e888339810160408190526200005891620003db565b80808062000066336200021a565b600180546001600160a01b039092166001600160a01b03199283168117825560028054909316179091556040805160c08082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905287518087018952858152808501869052808901869052808401869052808301869052808201869052885160e081018a5286815289518084018b52878152808701889052808b0188905280860188905280850188905295810195865298890186905292880185905290870186905286018190524293860193909352600f805496870181559091528351600c9095027f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802810195865590519294919392620001b0917f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac803019060056200026a565b50604082015160028201805460ff1916911515919091179055606082015160038201556080820151620001ea906004830190600662000304565b5060a08201516200020290600a830190600662000335565b5060c082015181600b0155505050505050506200040d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620002f25791602002820160005b83821115620002c157835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030262000281565b8015620002f05782816101000a81549060ff0219169055600101602081600001049283019260010302620002c1565b505b5062000300929150620003c4565b5090565b8260068101928215620002f2579160200282015b82811115620002f257825182559160200191906001019062000318565b600183019183908215620002f25791602002820160005b838211156200039257835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026200034c565b8015620002f05782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000392565b5b80821115620003005760008155600101620003c5565b600060208284031215620003ee57600080fd5b81516001600160a01b03811681146200040657600080fd5b9392505050565b613a6b806200041d6000396000f3fe60806040526004361061020f5760003560e01c80636179f54711610118578063be578ead116100a0578063e177246e1161006f578063e177246e14610661578063e76ffa9414610681578063efff5e2f146106b2578063f2fde38b146106c7578063fbbad3cd146106e757600080fd5b8063be578ead146105de578063c6f6d9d91461060b578063d07f8a4314610621578063dcbad90d1461064157600080fd5b80639f283ccb116100e75780639f283ccb146105475780639f52d8be1461055c5780639f59dc7c1461057e578063ab35893d1461059e578063b12e29df146105be57600080fd5b80636179f547146104c55780636b9a7d01146104e5578063715018a6146105145780638da5cb5b1461052957600080fd5b80632dcb451f1161019b57806350b447121161016a57806350b44712146103f657806354e3c24f1461042b5780635b472e301461044b5780635d091f38146104785780635d2182b61461049857600080fd5b80632dcb451f1461037c5780633ccfd60b146103b957806347810b3e146103ce5780634e71d92d146103ee57600080fd5b80631209b1f6116101e25780631209b1f6146102ab57806315981650146102c1578063272b0ee5146102e157806327febd391461030e5780632b08e8241461032e57600080fd5b806301b08410146102145780630837f15b1461021e5780630cc36c36146102465780630eecae2114610286575b600080fd5b61021c610709565b005b34801561022a57600080fd5b5061023361093d565b6040519081526020015b60405180910390f35b34801561025257600080fd5b506102666102613660046134b8565b61097f565b60408051948552921515602085015291830152606082015260800161023d565b34801561029257600080fd5b5061029b6109bc565b604051901515815260200161023d565b3480156102b757600080fd5b5061023360045481565b3480156102cd57600080fd5b5061021c6102dc3660046134b8565b6109dc565b3480156102ed57600080fd5b506103016102fc3660046134b8565b610a0b565b60405161023d91906137f2565b34801561031a57600080fd5b50610233610329366004613438565b610aac565b34801561033a57600080fd5b506103646103493660046134b8565b600b602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161023d565b34801561038857600080fd5b50610391610ca1565b604080519586526020860194909452928401919091526060830152608082015260a00161023d565b3480156103c557600080fd5b5061021c610d42565b3480156103da57600080fd5b50600154610364906001600160a01b031681565b610233610e0f565b34801561040257600080fd5b506104166104113660046134b8565b610f24565b6040805192835290151560208301520161023d565b34801561043757600080fd5b506102336104463660046134d1565b610f58565b34801561045757600080fd5b506102336104663660046134b8565b600d6020526000908152604090205481565b34801561048457600080fd5b5061021c6104933660046134b8565b610f89565b3480156104a457600080fd5b506104b86104b3366004613438565b611278565b60405161023d9190613717565b3480156104d157600080fd5b506102336104e03660046134b8565b6113bc565b3480156104f157600080fd5b506105056105003660046134b8565b611504565b60405161023d9392919061374f565b34801561052057600080fd5b5061021c6115be565b34801561053557600080fd5b506000546001600160a01b0316610364565b34801561055357600080fd5b5061029b6115f4565b34801561056857600080fd5b50610571611639565b60405161023d91906137e3565b34801561058a57600080fd5b506104b8610599366004613438565b61179f565b3480156105aa57600080fd5b506105716105b93660046134b8565b611877565b3480156105ca57600080fd5b506104b86105d93660046134b8565b6119d3565b3480156105ea57600080fd5b506105fe6105f9366004613453565b611a35565b60405161023d9190613694565b34801561061757600080fd5b5061023360035481565b34801561062d57600080fd5b5061021c61063c366004613438565b611bac565b34801561064d57600080fd5b50600954610364906001600160a01b031681565b34801561066d57600080fd5b5061021c61067c3660046134b8565b611bf8565b34801561068d57600080fd5b506106a161069c3660046134b8565b611c27565b60405161023d959493929190613773565b3480156106be57600080fd5b50610233611e94565b3480156106d357600080fd5b5061021c6106e2366004613438565b611f48565b3480156106f357600080fd5b506106fc611fe0565b60405161023d9190613645565b6000341161071657600080fd5b6002546040805163313ce56760e01b8152905134926000926001600160a01b039091169163313ce56791600480820192602092909190829003018186803b15801561076057600080fd5b505afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079891906134f3565b6107a390600a6138b7565b6004546107b19084906121dc565b6107bb9190613962565b60408051808201825260158152746d696e7428616464726573732c75696e743235362960581b60209182015260015482513360248201526044808201869052845180830390910181526064909101845291820180516001600160e01b03166340c10f1960e01b17905291519293507f40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f28429260009283926001600160a01b0390911691610866919061360a565b6000604051808303816000865af19150503d80600081146108a3576040519150601f19603f3d011682016040523d82523d6000602084013e6108a8565b606091505b50915091508180156108d25750805115806108d25750808060200190518101906108d2919061347d565b6109365760405162461bcd60e51b815260206004820152602a60248201527f4c6f7474657279466163746f72793a3a6275794c6f747479546f6b656e3a206d6044820152691a5b9d0819985a5b195960b21b60648201526084015b60405180910390fd5b5050505050565b600061097a601054600f6003548154811061095a5761095a613a09565b90600052602060002090600c0201600b01546121ef90919063ffffffff16565b905090565b600f818154811061098f57600080fd5b60009182526020909120600c90910201805460028201546003830154600b9093015491935060ff16919084565b6000806109c76115f4565b156109d7576109d46121fb565b90505b919050565b6000546001600160a01b03163314610a065760405162461bcd60e51b815260040161092d906137ae565b600455565b610a136131df565b600a8281548110610a2657610a26613a09565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610a56575050509284525050506001820154602082015260029091015460ff16151560409091015292915050565b600080805b600a54811015610c9a576000818152600b60205260409020546001600160a01b038581169116148015610b0b5750600a8181548110610af257610af2613a09565b600091825260209091206002600390920201015460ff16155b15610c88576000610c1d600f600a8481548110610b2a57610b2a613a09565b90600052602060002090600302016001015481548110610b4c57610b4c613a09565b6000918252602082206040805160a081019182905293600c90930290910160010191600591908390855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610b765790505050505050600a8481548110610bbc57610bbc613a09565b600091825260209091206040805160a08101909152916003020160058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610be557905050505050506128bc565b9050610c84600f600a8481548110610c3757610c37613a09565b90600052602060002090600302016001015481548110610c5957610c59613a09565b90600052602060002090600c02016004018260068110610c7b57610c7b613a09565b015484906121ef565b9250505b80610c9281613998565b915050610ab1565b5092915050565b6002546040516370a0823160e01b815230600482015260009182918291829182916001600160a01b0316906370a082319060240160206040518083038186803b158015610ced57600080fd5b505afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d25919061349f565b600554600654600754600854945094509450945094509091929394565b6000546001600160a01b03163314610d6c5760405162461bcd60e51b815260040161092d906137ae565b600080546006546040516001600160a01b03909216918381818185875af1925050503d8060008114610dba576040519150601f19603f3d011682016040523d82523d6000602084013e610dbf565b606091505b50506000600655905080610e0c5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161092d565b50565b600080805b600a54811015610ef7576000818152600b60205260409020546001600160a01b031633148015610e6b5750600a8181548110610e5257610e52613a09565b600091825260209091206002600390920201015460ff16155b15610ee5576001600a8281548110610e8557610e85613a09565b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055506000610ec7600f600a8481548110610b2a57610b2a613a09565b9050610ee1600f600a8481548110610c3757610c37613a09565b9250505b80610eef81613998565b915050610e14565b50600154610f0f906001600160a01b0316338361294b565b600554610f1c9082612a75565b600555919050565b600a8181548110610f3457600080fd5b60009182526020909120600390910201600181015460029091015490915060ff1682565b600c6020528160005260406000208181548110610f7457600080fd5b90600052602060002001600091509150505481565b610f946001826139b3565b156110165760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a2063616e6e6f7420627579206672616374696f6e206f66206064820152651d1a58dad95d60d21b608482015260a40161092d565b61102881670de0b6b3a7640000613962565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561106b57600080fd5b505afa15801561107f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a3919061349f565b10156111265760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f75677468204c545920746f20627579206064820152651d1a58dad95d60d21b608482015260a40161092d565b61113881670de0b6b3a7640000613962565b600254604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b15801561118157600080fd5b505afa158015611195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b9919061349f565b101561122d5760405162461bcd60e51b815260206004820152603e60248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f7567746820616c6c6f77616e63650000606482015260840161092d565b60005b81811015611274576112423382612a81565b600154611262906001600160a01b03163330670de0b6b3a7640000612be9565b8061126c81613998565b915050611230565b5050565b6060600061128883600354612d27565b905060008167ffffffffffffffff8111156112a5576112a5613a1f565b6040519080825280602002602001820160405280156112ce578160200160208202803683370190505b5090506000805b6003546000908152600c60205260409020548110156113b257600b6000600c60006003548152602001908152602001600020838154811061131857611318613a09565b600091825260208083209091015483528201929092526040019020546001600160a01b03878116911614156113a0576003546000908152600c6020526040902080548290811061136a5761136a613a09565b906000526020600020015483838151811061138757611387613a09565b602090810291909101015261139d8260016121ef565b91505b806113aa81613998565b9150506112d5565b5090949350505050565b60008060009050600a83815481106113d6576113d6613a09565b600091825260209091206002600390920201015460ff166114fe57600061149d600f600a868154811061140b5761140b613a09565b9060005260206000209060030201600101548154811061142d5761142d613a09565b6000918252602082206040805160a081019182905293600c90930290910160010191600591908390855b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116114575790505050505050600a8681548110610bbc57610bbc613a09565b9050600f600a85815481106114b4576114b4613a09565b906000526020600020906003020160010154815481106114d6576114d6613a09565b90600052602060002090600c020160040181600681106114f8576114f8613a09565b01549150505b92915050565b61150c613206565b6000806000600a858154811061152457611524613a09565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161155457505050928452505050600182015460208083019190915260029092015460ff1615156040918201528251918301519201519097919650945092505050565b6000546001600160a01b031633146115e85760405162461bcd60e51b815260040161092d906137ae565b6115f26000612dbf565b565b6000601054611632600f6003548154811061161157611611613a09565b90600052602060002090600c0201600b015442612a7590919063ffffffff16565b1015905090565b611641613224565b600f8054611650906001612a75565b8154811061166057611660613a09565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116116a257505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b8154815260200190600101908083116117105750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161174b57905050505050508152602001600b82015481525050905090565b6001600160a01b0381166000908152600e60205260408120546060919067ffffffffffffffff8111156117d4576117d4613a1f565b6040519080825280602002602001820160405280156117fd578160200160208202803683370190505b5090506000805b600a5481101561186e576000818152600b60205260409020546001600160a01b038681169116141561185c578083838151811061184357611843613a09565b60209081029190910101526118598260016121ef565b91505b8061186681613998565b915050611804565b50909392505050565b61187f613224565b600f828154811061189257611892613a09565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116118d457505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b8154815260200190600101908083116119425750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161197d57905050505050508152602001600b820154815250509050919050565b6000818152600c6020908152604091829020805483518184028101840190945280845260609392830182828015611a2957602002820191906000526020600020905b815481526020019060010190808311611a15575b50505050509050919050565b60606000611a438484612d27565b905060008167ffffffffffffffff811115611a6057611a60613a1f565b604051908082528060200260200182016040528015611a9957816020015b611a86613273565b815260200190600190039081611a7e5790505b5090506000805b6000868152600c6020526040902054811015611ba1576000868152600c60205260408120805483908110611ad657611ad6613a09565b6000918252602080832090910154808352600b9091526040909120549091506001600160a01b039081169089161415611b8e576000806000806000611b1a86611c27565b945094509450945094506040518060a001604052808681526020018581526020018415158152602001836005811115611b5557611b556139f3565b815260200182815250898981518110611b7057611b70613a09565b6020908102919091010152611b868860016121ef565b975050505050505b5080611b9981613998565b915050611aa0565b509095945050505050565b6000546001600160a01b03163314611bd65760405162461bcd60e51b815260040161092d906137ae565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611c225760405162461bcd60e51b815260040161092d906137ae565b601055565b611c2f613206565b6000806000806000600a8781548110611c4a57611c4a613a09565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411611c7a575050509284525050506001820154602082015260029091015460ff161515604090910152600a80549192506000918291600f918b908110611ce957611ce9613a09565b90600052602060002090600302016001015481548110611d0b57611d0b613a09565b600091825260209091206002600c90920201015460ff1615611e76576000611dd3600f600a8c81548110611d4157611d41613a09565b90600052602060002090600302016001015481548110611d6357611d63613a09565b6000918252602082206040805160a081019182905293600c90930290910160010191600591908390855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411611d8d5790505050505050600a8c81548110610bbc57610bbc613a09565b905080600214611e025780600314611dfb5780600414611df4576001611e05565b6004611e05565b6003611e05565b60025b925060018111611e16576000611e72565b600f600a8b81548110611e2b57611e2b613a09565b90600052602060002090600302016001015481548110611e4d57611e4d613a09565b90600052602060002090600c02016004018160068110611e6f57611e6f613a09565b01545b9150505b82516020840151604090940151909a93995097509095509350915050565b6006546008546007546005546002546040516370a0823160e01b8152306004820152600095949392916001600160a01b0316906370a082319060240160206040518083038186803b158015611ee857600080fd5b505afa158015611efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f20919061349f565b611f2a9190613981565b611f349190613981565b611f3e9190613981565b61097a9190613981565b6000546001600160a01b03163314611f725760405162461bcd60e51b815260040161092d906137ae565b6001600160a01b038116611fd75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161092d565b610e0c81612dbf565b600f5460609060009067ffffffffffffffff81111561200157612001613a1f565b60405190808252806020026020018201604052801561203a57816020015b612027613224565b81526020019060019003908161201f5790505b5090506000805b600f548110156121d457600f818154811061205e5761205e613a09565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116120a057505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b81548152602001906001019080831161210e5750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161214957905050505050508152602001600b820154815250508383815181106121aa576121aa613a09565b60209081029190910101526121c08260016121ef565b9150806121cc81613998565b915050612041565b509092915050565b60006121e88284613860565b9392505050565b60006121e88284613820565b600f54600090819061220e906001612a75565b600954604051632cdc85e960e21b8152600481018390529192506000916001600160a01b039091169063b37217a490602401602060405180830381600087803b15801561225a57600080fd5b505af115801561226e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612292919061349f565b9050600061229f82612e0f565b6040805160c08082018352600080835260208084018290528385018290526060808501839052608080860184905260a08087018590528751958601885284865292850184905295840183905283018290529382018190529281018390529293509190612309611e94565b6000878152600c602090815260408083208054825181850281018501909352808352949550929390929183018282801561236257602002820191906000526020600020905b81548152602001906001019080831161234e575b505083519394506000925050505b81811015612549576000600a84838151811061238e5761238e613a09565b6020026020010151815481106123a6576123a6613a09565b600091825260209091206040805160a08101909152916003020160058282826020028201916000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116123cf57905050505050509050600061241089836128bc565b90508061243d578751612424906001613838565b8860005b63ffffffff9092166020929092020152612534565b806001141561245e576020880151612456906001613838565b886001612428565b806002141561247f576040880151612477906001613838565b886002612428565b80600314156124a0576060880151612498906001613838565b886003612428565b80600414156124c15760808801516124b9906001613838565b886004612428565b80600514156124e25760a08801516124da906001613838565b886005612428565b60405162461bcd60e51b815260206004820152602160248201527f436f756c646e277420646566696e652073746174757320666f72207469636b656044820152601d60fa1b606482015260840161092d565b5050808061254190613998565b915050612370565b50604085015163ffffffff16612560576000612598565b612598856002602002015163ffffffff166125926103e861258c612710886121dc90919063ffffffff16565b90613045565b906121dc565b6040850152606085015163ffffffff166125b35760006125df565b6125df856003602002015163ffffffff166125926105dc61258c612710886121dc90919063ffffffff16565b6060850152608085015163ffffffff166125fa576000612626565b612626856004602002015163ffffffff166125926109c461258c612710886121dc90919063ffffffff16565b608085015260a085015163ffffffff1661264157600061266d565b61266d856005602002015163ffffffff1661259261119461258c612710886121dc90919063ffffffff16565b60a08501526000612685609661258c866127106121dc565b9050600061269a60c861258c876127106121dc565b905060006126af609661258c886127106121dc565b6006549091506126bf90846121ef565b6006556007546126cf90836121ef565b6007556008546126df90826121ef565b60085561276661275d6127088a6005602002015163ffffffff168a60055b602002015190613045565b6127576127248c6004602002015163ffffffff168c60046126fd565b6127576127408e6003602002015163ffffffff168e60036126fd565b60408f01516127579063ffffffff168f60026126fd565b906121ef565b600554906121ef565b6005819055506001600f8c8154811061278157612781613a09565b90600052602060002090600c020160020160006101000a81548160ff02191690831515021790555088600f8c815481106127bd576127bd613a09565b90600052602060002090600c02016001019060056127dc9291906132a3565b5085600f8c815481106127f1576127f1613a09565b90600052602060002090600c02016003018190555086600f8c8154811061281a5761281a613a09565b90600052602060002090600c0201600401906006612839929190613336565b5087600f8c8154811061284e5761284e613a09565b90600052602060002090600c0201600a0190600661286d929190613364565b5088600f8c8154811061288257612882613a09565b90600052602060002090600c02016001019060056128a19291906132a3565b506128aa613051565b60019b50505050505050505050505090565b600080805b60058110156129435760005b6005811015612930578481600581106128e8576128e8613a09565b602002015160ff1686836005811061290257612902613a09565b602002015160ff16141561291e5761291b8360016121ef565b92505b8061292881613998565b9150506128cd565b508061293b81613998565b9150506128c1565b509392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916129a7919061360a565b6000604051808303816000865af19150503d80600081146129e4576040519150601f19603f3d011682016040523d82523d6000602084013e6129e9565b606091505b5091509150818015612a13575080511580612a13575080806020019051810190612a13919061347d565b6109365760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b606482015260840161092d565b60006121e88284613981565b6003546000612a98612a938484613820565b612e0f565b60408051606081018252828152602081018590526000918101829052600a8054600181018255925280519293509160039091027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80190612afb90829060056132a3565b5060208201516001828101919091556040909201516002909101805460ff1916911515919091179055600a54600091612b349190612a75565b6000818152600b6020908152604080832080546001600160a01b0319166001600160a01b038b16179055868352600c825280832080546001818101835591855283852001859055878452600d90925290912054919250612b9491906121ef565b6000848152600d60209081526040808320939093556001600160a01b0388168252600e90522054612bc69060016121ef565b6001600160a01b039095166000908152600e602052604090209490945550505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691612c4d919061360a565b6000604051808303816000865af19150503d8060008114612c8a576040519150601f19603f3d011682016040523d82523d6000602084013e612c8f565b606091505b5091509150818015612cb9575080511580612cb9575080806020019051810190612cb9919061347d565b612d1f5760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b606482015260840161092d565b505050505050565b600080805b6000848152600c602052604090205481101561294357846001600160a01b0316600b6000600c60008881526020019081526020016000208481548110612d7457612d74613a09565b600091825260208083209091015483528201929092526040019020546001600160a01b03161415612dad57612daa8260016121ef565b91505b80612db781613998565b915050612d2c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612e17613206565b612e1f613206565b604080516103208101825260018152600260208201526003918101919091526004606082015260056080820152600660a0820152600760c0820152600860e08201526009610100820152600a610120820152600b610140820152600c610160820152600d610180820152600e6101a0820152600f6101c082015260106101e08201526011610200820152601261022082015260136102408201526014610260820152601561028082015260166102a082015260176102c082015260186102e08201526019610300820152600090815b6005811015612fe6576040516bffffffffffffffffffffffff193360601b16602082015242603482015260548101829052607481018490526094810187905260009060199060b4016040516020818303038152906040528051906020012060001c612f5991906139b3565b9050828160198110612f6d57612f6d613a09565b6020020151838360198110612f8457612f84613a09565b6020020151848460198110612f9b57612f9b613a09565b60200201858460198110612fb157612fb1613a09565b60ff93841660209190910291909101529116905283612fcf81613998565b945050508080612fde90613998565b915050612eee565b5060005b600581101561303b5781816019811061300557613005613a09565b602002015184826005811061301c5761301c613a09565b60ff90921660209290920201528061303381613998565b915050612fea565b5091949350505050565b60006121e88284613962565b60035461305f9060016121ef565b60038190556040805160c08082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905287518087018952858152808501869052808901869052808401869052808301869052808201869052885160e081018a52998a5288518083018a52868152808601879052808a01879052808501879052808401879052948a01948552978901859052918801849052870185905286018590524292860192909252600f8054600181018255915284517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802600c9092029182019081559151929492613180917f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac803019060056132a3565b50604082015160028201805460ff19169115159190911790556060820151600382015560808201516131b89060048301906006613336565b5060a08201516131ce90600a8301906006613364565b5060c082015181600b015550505050565b60405180606001604052806131f2613206565b815260006020820181905260409091015290565b6040518060a001604052806005906020820280368337509192915050565b6040518060e001604052806000815260200161323e613206565b815260006020820181905260408201526060016132596133ee565b81526020016132666133ee565b8152602001600081525090565b6040518060a00160405280613286613206565b815260006020820181905260408201819052606090910190613266565b6001830191839082156133265791602002820160005b838211156132f757835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026132b9565b80156133245782816101000a81549060ff02191690556001016020816000010492830192600103026132f7565b505b5061333292915061340c565b5090565b8260068101928215613326579160200282015b82811115613326578251825591602001919060010190613349565b6001830191839082156133265791602002820160005b838211156133be57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261337a565b80156133245782816101000a81549063ffffffff02191690556004016020816003010492830192600103026133be565b6040518060c001604052806006906020820280368337509192915050565b5b80821115613332576000815560010161340d565b80356001600160a01b03811681146109d757600080fd5b60006020828403121561344a57600080fd5b6121e882613421565b6000806040838503121561346657600080fd5b61346f83613421565b946020939093013593505050565b60006020828403121561348f57600080fd5b815180151581146121e857600080fd5b6000602082840312156134b157600080fd5b5051919050565b6000602082840312156134ca57600080fd5b5035919050565b600080604083850312156134e457600080fd5b50508035926020909101359150565b60006020828403121561350557600080fd5b815160ff811681146121e857600080fd5b8060005b600681101561353f57815163ffffffff1684526020938401939091019060010161351a565b50505050565b8060005b600581101561353f57815160ff16845260209384019390910190600101613549565b6006811061358957634e487b7160e01b600052602160045260246000fd5b9052565b805182526020808201516135a382850182613545565b506040820151151560c0840152606082015160e08401526080820151610100840160005b60068110156135e4578251825291830191908301906001016135c7565b5050505060a08101516135fb6101c0840182613516565b5060c001516102809190910152565b6000825160005b8181101561362b5760208186018101518583015201613611565b8181111561363a576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156136885761367483855161358d565b928401926102a09290920191600101613661565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561370a5781516136c6858251613545565b8681015160a086015285810151151560c086015260608101516136ec60e087018261356b565b506080015161010085015261012090930192908501906001016136b1565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561368857835183529284019291840191600101613733565b60e0810161375d8286613545565b8360a083015282151560c0830152949350505050565b61012081016137828288613545565b8560a083015284151560c083015261379d60e083018561356b565b826101008301529695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6102a081016114fe828461358d565b600060e082019050613805828451613545565b602083015160a0830152604090920151151560c09091015290565b60008219821115613833576138336139c7565b500190565b600063ffffffff808316818516808303821115613857576138576139c7565b01949350505050565b60008261386f5761386f6139dd565b500490565b600181815b808511156138af578160001904821115613895576138956139c7565b808516156138a257918102915b93841c9390800290613879565b509250929050565b60006121e860ff8416836000826138d0575060016114fe565b816138dd575060006114fe565b81600181146138f357600281146138fd57613919565b60019150506114fe565b60ff84111561390e5761390e6139c7565b50506001821b6114fe565b5060208310610133831016604e8410600b841016171561393c575081810a6114fe565b6139468383613874565b806000190482111561395a5761395a6139c7565b029392505050565b600081600019048311821515161561397c5761397c6139c7565b500290565b600082821015613993576139936139c7565b500390565b60006000198214156139ac576139ac6139c7565b5060010190565b6000826139c2576139c26139dd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212207f4e68059f5193ee4da0cbc4a8ec203c883d31ede0b2507a8b09a0ce6a99047d64736f6c63430008060033";

export class Lottery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(_LTY, overrides || {}) as Promise<Lottery>;
  }
  getDeployTransaction(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_LTY, overrides || {});
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
