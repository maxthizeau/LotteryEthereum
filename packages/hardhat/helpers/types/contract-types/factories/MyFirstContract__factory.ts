/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MyFirstContract,
  MyFirstContractInterface,
} from "../MyFirstContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "SetPurpose",
    type: "event",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601960808190527f4275696c6420756e73746f707061626c6520644170707320210000000000000060a090815261003e9160009190610051565b5034801561004b57600080fd5b50610125565b82805461005d906100ea565b90600052602060002090601f01602090048101928261007f57600085556100c5565b82601f1061009857805160ff19168380011785556100c5565b828001600101855582156100c5579182015b828111156100c55782518255916020019190600101906100aa565b506100d19291506100d5565b5090565b5b808211156100d157600081556001016100d6565b600181811c908216806100fe57607f821691505b6020821081141561011f57634e487b7160e01b600052602260045260246000fd5b50919050565b610542806101346000396000f3fe6080604052600436106100345760003560e01c806370740aab14610039578063b69ef8a814610064578063eb68757f1461007f575b600080fd5b34801561004557600080fd5b5061004e610094565b60405161005b91906104a1565b60405180910390f35b34801561007057600080fd5b5060405147815260200161005b565b61009261008d3660046102aa565b610122565b005b600080546100a1906104bb565b80601f01602080910402602001604051908101604052809291908181526020018280546100cd906104bb565b801561011a5780601f106100ef5761010080835404028352916020019161011a565b820191906000526020600020905b8154815290600101906020018083116100fd57829003601f168201915b505050505081565b8051610135906000906020840190610211565b50610167336040518060400160405280600e81526020016d73657420707572706f736520746f60901b815250836101a4565b7f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de3360006040516101999291906103e8565b60405180910390a150565b6101eb8383836040516024016101bc939291906103a8565b60408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b1790526101f0565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461021d906104bb565b90600052602060002090601f01602090048101928261023f5760008555610285565b82601f1061025857805160ff1916838001178555610285565b82800160010185558215610285579182015b8281111561028557825182559160200191906001019061026a565b50610291929150610295565b5090565b5b808211156102915760008155600101610296565b6000602082840312156102bc57600080fd5b813567ffffffffffffffff808211156102d457600080fd5b818401915084601f8301126102e857600080fd5b8135818111156102fa576102fa6104f6565b604051601f8201601f19908116603f01168101908382118183101715610322576103226104f6565b8160405282815287602084870101111561033b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b8181101561038157602081850181015186830182015201610365565b81811115610393576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03841681526060602082018190526000906103cc9083018561035b565b82810360408401526103de818561035b565b9695505050505050565b60018060a01b0383168152600060206040818401526000845481600182811c91508083168061041857607f831692505b85831081141561043657634e487b7160e01b85526022600452602485fd5b6040880183905260608801818015610455576001811461046657610491565b60ff19861682528782019650610491565b60008b81526020902060005b8681101561048b57815484820152908501908901610472565b83019750505b50949a9950505050505050505050565b6020815260006104b4602083018461035b565b9392505050565b600181811c908216806104cf57607f821691505b602082108114156104f057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b999304ba3cfc23a67a24250a4d53117506dc4737ab477c274854a088261c08464736f6c63430008060033";

export class MyFirstContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyFirstContract> {
    return super.deploy(overrides || {}) as Promise<MyFirstContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyFirstContract {
    return super.attach(address) as MyFirstContract;
  }
  connect(signer: Signer): MyFirstContract__factory {
    return super.connect(signer) as MyFirstContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyFirstContractInterface {
    return new utils.Interface(_abi) as MyFirstContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyFirstContract {
    return new Contract(address, _abi, signerOrProvider) as MyFirstContract;
  }
}
