/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LotteryClaimer,
  LotteryClaimerInterface,
} from "../LotteryClaimer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_LTY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "LTY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllDraws",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getCurrentDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "_getCurrentDrawTicketsOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardBalanceAtDraw",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsByWinningNumber",
            type: "uint256[6]",
          },
          {
            internalType: "uint32[6]",
            name: "winnersByWinningNumber",
            type: "uint32[6]",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDrawer.Draw",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDrawToTickets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "_getTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "uint256",
            name: "drawNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct LotteryFactory.Ticket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "_getTicketsByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getTicketsOfOwnerForDraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "uint256",
            name: "drawNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
          {
            internalType: "enum LotteryFactory.TicketStatus",
            name: "ticketStatus",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rewardsAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryClaimer.TicketWithInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyLottyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyMultipleRandomTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTicketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "draws",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rewardBalanceAtDraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getClaimableAmountOfAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "getClaimableAmountOfTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "getTicketWithRewardsAndStatus",
    outputs: [
      {
        internalType: "uint8[5]",
        name: "",
        type: "uint8[5]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "enum LotteryFactory.TicketStatus",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomGenerator",
    outputs: [
      {
        internalType: "contract IRandomNumberGenerator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_IRandomNumberGenerator",
        type: "address",
      },
    ],
    name: "setRandomNumberGenerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setTicketPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "drawNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "viewTicket",
    outputs: [
      {
        internalType: "uint8[5]",
        name: "",
        type: "uint8[5]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526611c37937e0800060045560006005556000600655600060075560006008553480156200003057600080fd5b50604051620033df380380620033df8339810160408190526200005391620003d4565b8080620000603362000213565b600180546001600160a01b039092166001600160a01b03199283168117825560028054909316179091556040805160c08082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905287518087018952858152808501869052808901869052808401869052808301869052808201869052885160e081018a5286815289518084018b52878152808701889052808b0188905280860188905280850188905295810195865298890186905292880185905290870186905286018190524293860193909352600f805496870181559091528351600c9095027f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802810195865590519294919392620001aa917f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8030190600562000263565b50604082015160028201805460ff1916911515919091179055606082015160038201556080820151620001e49060048301906006620002fd565b5060a0820151620001fc90600a83019060066200032e565b5060c082015181600b015550505050505062000406565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600183019183908215620002eb5791602002820160005b83821115620002ba57835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026200027a565b8015620002e95782816101000a81549060ff0219169055600101602081600001049283019260010302620002ba565b505b50620002f9929150620003bd565b5090565b8260068101928215620002eb579160200282015b82811115620002eb57825182559160200191906001019062000311565b600183019183908215620002eb5791602002820160005b838211156200038b57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000345565b8015620002e95782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200038b565b5b80821115620002f95760008155600101620003be565b600060208284031215620003e757600080fd5b81516001600160a01b0381168114620003ff57600080fd5b9392505050565b612fc980620004166000396000f3fe6080604052600436106101e35760003560e01c80636179f54711610102578063be578ead11610095578063e76ffa9411610064578063e76ffa94146105e6578063efff5e2f14610617578063f2fde38b1461062c578063fbbad3cd1461064c57600080fd5b8063be578ead14610563578063c6f6d9d914610590578063d07f8a43146105a6578063dcbad90d146105c657600080fd5b80639f52d8be116100d15780639f52d8be146104e15780639f59dc7c14610503578063ab35893d14610523578063b12e29df1461054357600080fd5b80636179f5471461045f5780636b9a7d011461047f578063715018a6146104ae5780638da5cb5b146104c357600080fd5b80633ccfd60b1161017a57806354e3c24f1161014957806354e3c24f146103c55780635b472e30146103e55780635d091f38146104125780635d2182b61461043257600080fd5b80633ccfd60b1461035357806347810b3e146103685780634e71d92d1461038857806350b447121461039057600080fd5b8063272b0ee5116101b6578063272b0ee51461027b57806327febd39146102a85780632b08e824146102c85780632dcb451f1461031657600080fd5b806301b08410146101e85780630cc36c36146101f25780631209b1f614610237578063159816501461025b575b600080fd5b6101f061066e565b005b3480156101fe57600080fd5b5061021261020d366004612a25565b6108a2565b6040805194855292151560208501529183015260608201526080015b60405180910390f35b34801561024357600080fd5b5061024d60045481565b60405190815260200161022e565b34801561026757600080fd5b506101f0610276366004612a25565b6108df565b34801561028757600080fd5b5061029b610296366004612a25565b61090e565b60405161022e9190612d78565b3480156102b457600080fd5b5061024d6102c33660046129be565b6109af565b3480156102d457600080fd5b506102fe6102e3366004612a25565b600b602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022e565b34801561032257600080fd5b5061032b610ba4565b604080519586526020860194909452928401919091526060830152608082015260a00161022e565b34801561035f57600080fd5b506101f0610c45565b34801561037457600080fd5b506001546102fe906001600160a01b031681565b61024d610d12565b34801561039c57600080fd5b506103b06103ab366004612a25565b610e27565b6040805192835290151560208301520161022e565b3480156103d157600080fd5b5061024d6103e0366004612a57565b610e5b565b3480156103f157600080fd5b5061024d610400366004612a25565b600d6020526000908152604090205481565b34801561041e57600080fd5b506101f061042d366004612a25565b610e8c565b34801561043e57600080fd5b5061045261044d3660046129be565b61117b565b60405161022e9190612c9d565b34801561046b57600080fd5b5061024d61047a366004612a25565b6112bf565b34801561048b57600080fd5b5061049f61049a366004612a25565b611407565b60405161022e93929190612cd5565b3480156104ba57600080fd5b506101f06114c1565b3480156104cf57600080fd5b506000546001600160a01b03166102fe565b3480156104ed57600080fd5b506104f66114f7565b60405161022e9190612d69565b34801561050f57600080fd5b5061045261051e3660046129be565b61165d565b34801561052f57600080fd5b506104f661053e366004612a25565b611735565b34801561054f57600080fd5b5061045261055e366004612a25565b611891565b34801561056f57600080fd5b5061058361057e3660046129d9565b6118f3565b60405161022e9190612c1a565b34801561059c57600080fd5b5061024d60035481565b3480156105b257600080fd5b506101f06105c13660046129be565b611a6a565b3480156105d257600080fd5b506009546102fe906001600160a01b031681565b3480156105f257600080fd5b50610606610601366004612a25565b611ab6565b60405161022e959493929190612cf9565b34801561062357600080fd5b5061024d611d23565b34801561063857600080fd5b506101f06106473660046129be565b611ddc565b34801561065857600080fd5b50610661611e74565b60405161022e9190612bcb565b6000341161067b57600080fd5b6002546040805163313ce56760e01b8152905134926000926001600160a01b039091169163313ce56791600480820192602092909190829003018186803b1580156106c557600080fd5b505afa1580156106d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fd9190612a79565b61070890600a612e15565b600454610716908490612070565b6107209190612ec0565b60408051808201825260158152746d696e7428616464726573732c75696e743235362960581b60209182015260015482513360248201526044808201869052845180830390910181526064909101845291820180516001600160e01b03166340c10f1960e01b17905291519293507f40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f28429260009283926001600160a01b03909116916107cb9190612b90565b6000604051808303816000865af19150503d8060008114610808576040519150601f19603f3d011682016040523d82523d6000602084013e61080d565b606091505b50915091508180156108375750805115806108375750808060200190518101906108379190612a03565b61089b5760405162461bcd60e51b815260206004820152602a60248201527f4c6f7474657279466163746f72793a3a6275794c6f747479546f6b656e3a206d6044820152691a5b9d0819985a5b195960b21b60648201526084015b60405180910390fd5b5050505050565b600f81815481106108b257600080fd5b60009182526020909120600c90910201805460028201546003830154600b9093015491935060ff16919084565b6000546001600160a01b031633146109095760405162461bcd60e51b815260040161089290612d34565b600455565b610916612818565b600a828154811061092957610929612f67565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610959575050509284525050506001820154602082015260029091015460ff16151560409091015292915050565b600080805b600a54811015610b9d576000818152600b60205260409020546001600160a01b038581169116148015610a0e5750600a81815481106109f5576109f5612f67565b600091825260209091206002600390920201015460ff16155b15610b8b576000610b20600f600a8481548110610a2d57610a2d612f67565b90600052602060002090600302016001015481548110610a4f57610a4f612f67565b6000918252602082206040805160a081019182905293600c90930290910160010191600591908390855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610a795790505050505050600a8481548110610abf57610abf612f67565b600091825260209091206040805160a08101909152916003020160058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610ae85790505050505050612083565b9050610b87600f600a8481548110610b3a57610b3a612f67565b90600052602060002090600302016001015481548110610b5c57610b5c612f67565b90600052602060002090600c02016004018260068110610b7e57610b7e612f67565b01548490612112565b9250505b80610b9581612ef6565b9150506109b4565b5092915050565b6002546040516370a0823160e01b815230600482015260009182918291829182916001600160a01b0316906370a082319060240160206040518083038186803b158015610bf057600080fd5b505afa158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c289190612a3e565b600554600654600754600854945094509450945094509091929394565b6000546001600160a01b03163314610c6f5760405162461bcd60e51b815260040161089290612d34565b600080546006546040516001600160a01b03909216918381818185875af1925050503d8060008114610cbd576040519150601f19603f3d011682016040523d82523d6000602084013e610cc2565b606091505b50506000600655905080610d0f5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610892565b50565b600080805b600a54811015610dfa576000818152600b60205260409020546001600160a01b031633148015610d6e5750600a8181548110610d5557610d55612f67565b600091825260209091206002600390920201015460ff16155b15610de8576001600a8281548110610d8857610d88612f67565b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055506000610dca600f600a8481548110610a2d57610a2d612f67565b9050610de4600f600a8481548110610b3a57610b3a612f67565b9250505b80610df281612ef6565b915050610d17565b50600154610e12906001600160a01b0316338361211e565b600554610e1f9082612248565b600555919050565b600a8181548110610e3757600080fd5b60009182526020909120600390910201600181015460029091015490915060ff1682565b600c6020528160005260406000208181548110610e7757600080fd5b90600052602060002001600091509150505481565b610e97600182612f11565b15610f195760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a2063616e6e6f7420627579206672616374696f6e206f66206064820152651d1a58dad95d60d21b608482015260a401610892565b610f2b81670de0b6b3a7640000612ec0565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610f6e57600080fd5b505afa158015610f82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa69190612a3e565b10156110295760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f75677468204c545920746f20627579206064820152651d1a58dad95d60d21b608482015260a401610892565b61103b81670de0b6b3a7640000612ec0565b600254604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b15801561108457600080fd5b505afa158015611098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bc9190612a3e565b10156111305760405162461bcd60e51b815260206004820152603e60248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f7567746820616c6c6f77616e636500006064820152608401610892565b60005b81811015611177576111453382612254565b600154611165906001600160a01b03163330670de0b6b3a76400006123bc565b8061116f81612ef6565b915050611133565b5050565b6060600061118b836003546124fa565b905060008167ffffffffffffffff8111156111a8576111a8612f7d565b6040519080825280602002602001820160405280156111d1578160200160208202803683370190505b5090506000805b6003546000908152600c60205260409020548110156112b557600b6000600c60006003548152602001908152602001600020838154811061121b5761121b612f67565b600091825260208083209091015483528201929092526040019020546001600160a01b03878116911614156112a3576003546000908152600c6020526040902080548290811061126d5761126d612f67565b906000526020600020015483838151811061128a5761128a612f67565b60209081029190910101526112a0826001612112565b91505b806112ad81612ef6565b9150506111d8565b5090949350505050565b60008060009050600a83815481106112d9576112d9612f67565b600091825260209091206002600390920201015460ff166114015760006113a0600f600a868154811061130e5761130e612f67565b9060005260206000209060030201600101548154811061133057611330612f67565b6000918252602082206040805160a081019182905293600c90930290910160010191600591908390855b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161135a5790505050505050600a8681548110610abf57610abf612f67565b9050600f600a85815481106113b7576113b7612f67565b906000526020600020906003020160010154815481106113d9576113d9612f67565b90600052602060002090600c020160040181600681106113fb576113fb612f67565b01549150505b92915050565b61140f61283f565b6000806000600a858154811061142757611427612f67565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161145757505050928452505050600182015460208083019190915260029092015460ff1615156040918201528251918301519201519097919650945092505050565b6000546001600160a01b031633146114eb5760405162461bcd60e51b815260040161089290612d34565b6114f56000612592565b565b6114ff61285d565b600f805461150e906001612248565b8154811061151e5761151e612f67565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161156057505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b8154815260200190600101908083116115ce5750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161160957905050505050508152602001600b82015481525050905090565b6001600160a01b0381166000908152600e60205260408120546060919067ffffffffffffffff81111561169257611692612f7d565b6040519080825280602002602001820160405280156116bb578160200160208202803683370190505b5090506000805b600a5481101561172c576000818152600b60205260409020546001600160a01b038681169116141561171a578083838151811061170157611701612f67565b6020908102919091010152611717826001612112565b91505b8061172481612ef6565b9150506116c2565b50909392505050565b61173d61285d565b600f828154811061175057611750612f67565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841161179257505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b8154815260200190600101908083116118005750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161183b57905050505050508152602001600b820154815250509050919050565b6000818152600c60209081526040918290208054835181840281018401909452808452606093928301828280156118e757602002820191906000526020600020905b8154815260200190600101908083116118d3575b50505050509050919050565b6060600061190184846124fa565b905060008167ffffffffffffffff81111561191e5761191e612f7d565b60405190808252806020026020018201604052801561195757816020015b6119446128ac565b81526020019060019003908161193c5790505b5090506000805b6000868152600c6020526040902054811015611a5f576000868152600c6020526040812080548390811061199457611994612f67565b6000918252602080832090910154808352600b9091526040909120549091506001600160a01b039081169089161415611a4c5760008060008060006119d886611ab6565b945094509450945094506040518060a001604052808681526020018581526020018415158152602001836005811115611a1357611a13612f51565b815260200182815250898981518110611a2e57611a2e612f67565b6020908102919091010152611a44886001612112565b975050505050505b5080611a5781612ef6565b91505061195e565b509095945050505050565b6000546001600160a01b03163314611a945760405162461bcd60e51b815260040161089290612d34565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b611abe61283f565b6000806000806000600a8781548110611ad957611ad9612f67565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411611b09575050509284525050506001820154602082015260029091015460ff161515604090910152600a80549192506000918291600f918b908110611b7857611b78612f67565b90600052602060002090600302016001015481548110611b9a57611b9a612f67565b600091825260209091206002600c90920201015460ff1615611d05576000611c62600f600a8c81548110611bd057611bd0612f67565b90600052602060002090600302016001015481548110611bf257611bf2612f67565b6000918252602082206040805160a081019182905293600c90930290910160010191600591908390855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411611c1c5790505050505050600a8c81548110610abf57610abf612f67565b905080600214611c915780600314611c8a5780600414611c83576001611c94565b6004611c94565b6003611c94565b60025b925060018111611ca5576000611d01565b600f600a8b81548110611cba57611cba612f67565b90600052602060002090600302016001015481548110611cdc57611cdc612f67565b90600052602060002090600c02016004018160068110611cfe57611cfe612f67565b01545b9150505b82516020840151604090940151909a93995097509095509350915050565b6006546008546007546005546002546040516370a0823160e01b8152306004820152600095949392916001600160a01b0316906370a082319060240160206040518083038186803b158015611d7757600080fd5b505afa158015611d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611daf9190612a3e565b611db99190612edf565b611dc39190612edf565b611dcd9190612edf565b611dd79190612edf565b905090565b6000546001600160a01b03163314611e065760405162461bcd60e51b815260040161089290612d34565b6001600160a01b038116611e6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610892565b610d0f81612592565b600f5460609060009067ffffffffffffffff811115611e9557611e95612f7d565b604051908082528060200260200182016040528015611ece57816020015b611ebb61285d565b815260200190600190039081611eb35790505b5090506000805b600f5481101561206857600f8181548110611ef257611ef2612f67565b60009182526020918290206040805160e081018252600c90930290910180548352815160a0810190925291928301906001830160058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411611f3457505050928452505050600282015460ff16151560208201526003820154604080830191909152805160c081019182905260609092019190600484019060069082845b815481526020019060010190808311611fa25750505091835250506040805160c081019182905260209092019190600a840190600690826000855b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611fdd57905050505050508152602001600b8201548152505083838151811061203e5761203e612f67565b6020908102919091010152612054826001612112565b91508061206081612ef6565b915050611ed5565b509092915050565b600061207c8284612dbe565b9392505050565b600080805b600581101561210a5760005b60058110156120f7578481600581106120af576120af612f67565b602002015160ff168683600581106120c9576120c9612f67565b602002015160ff1614156120e5576120e2836001612112565b92505b806120ef81612ef6565b915050612094565b508061210281612ef6565b915050612088565b509392505050565b600061207c8284612da6565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161217a9190612b90565b6000604051808303816000865af19150503d80600081146121b7576040519150601f19603f3d011682016040523d82523d6000602084013e6121bc565b606091505b50915091508180156121e65750805115806121e65750808060200190518101906121e69190612a03565b61089b5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b6064820152608401610892565b600061207c8284612edf565b600354600061226b6122668484612da6565b6125e2565b60408051606081018252828152602081018590526000918101829052600a8054600181018255925280519293509160039091027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801906122ce90829060056128dc565b5060208201516001828101919091556040909201516002909101805460ff1916911515919091179055600a546000916123079190612248565b6000818152600b6020908152604080832080546001600160a01b0319166001600160a01b038b16179055868352600c825280832080546001818101835591855283852001859055878452600d909252909120549192506123679190612112565b6000848152600d60209081526040808320939093556001600160a01b0388168252600e90522054612399906001612112565b6001600160a01b039095166000908152600e602052604090209490945550505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916124209190612b90565b6000604051808303816000865af19150503d806000811461245d576040519150601f19603f3d011682016040523d82523d6000602084013e612462565b606091505b509150915081801561248c57508051158061248c57508080602001905181019061248c9190612a03565b6124f25760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b6064820152608401610892565b505050505050565b600080805b6000848152600c602052604090205481101561210a57846001600160a01b0316600b6000600c6000888152602001908152602001600020848154811061254757612547612f67565b600091825260208083209091015483528201929092526040019020546001600160a01b031614156125805761257d826001612112565b91505b8061258a81612ef6565b9150506124ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6125ea61283f565b6125f261283f565b604080516103208101825260018152600260208201526003918101919091526004606082015260056080820152600660a0820152600760c0820152600860e08201526009610100820152600a610120820152600b610140820152600c610160820152600d610180820152600e6101a0820152600f6101c082015260106101e08201526011610200820152601261022082015260136102408201526014610260820152601561028082015260166102a082015260176102c082015260186102e08201526019610300820152600090815b60058110156127b9576040516bffffffffffffffffffffffff193360601b16602082015242603482015260548101829052607481018490526094810187905260009060199060b4016040516020818303038152906040528051906020012060001c61272c9190612f11565b905082816019811061274057612740612f67565b602002015183836019811061275757612757612f67565b602002015184846019811061276e5761276e612f67565b6020020185846019811061278457612784612f67565b60ff938416602091909102919091015291169052836127a281612ef6565b9450505080806127b190612ef6565b9150506126c1565b5060005b600581101561280e578181601981106127d8576127d8612f67565b60200201518482600581106127ef576127ef612f67565b60ff90921660209290920201528061280681612ef6565b9150506127bd565b5091949350505050565b604051806060016040528061282b61283f565b815260006020820181905260409091015290565b6040518060a001604052806005906020820280368337509192915050565b6040518060e001604052806000815260200161287761283f565b8152600060208201819052604082015260600161289261296f565b815260200161289f61296f565b8152602001600081525090565b6040518060a001604052806128bf61283f565b81526000602082018190526040820181905260609091019061289f565b60018301918390821561295f5791602002820160005b8382111561293057835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026128f2565b801561295d5782816101000a81549060ff0219169055600101602081600001049283019260010302612930565b505b5061296b92915061298d565b5090565b6040518060c001604052806006906020820280368337509192915050565b5b8082111561296b576000815560010161298e565b80356001600160a01b03811681146129b957600080fd5b919050565b6000602082840312156129d057600080fd5b61207c826129a2565b600080604083850312156129ec57600080fd5b6129f5836129a2565b946020939093013593505050565b600060208284031215612a1557600080fd5b8151801515811461207c57600080fd5b600060208284031215612a3757600080fd5b5035919050565b600060208284031215612a5057600080fd5b5051919050565b60008060408385031215612a6a57600080fd5b50508035926020909101359150565b600060208284031215612a8b57600080fd5b815160ff8116811461207c57600080fd5b8060005b6006811015612ac557815163ffffffff16845260209384019390910190600101612aa0565b50505050565b8060005b6005811015612ac557815160ff16845260209384019390910190600101612acf565b60068110612b0f57634e487b7160e01b600052602160045260246000fd5b9052565b80518252602080820151612b2982850182612acb565b506040820151151560c0840152606082015160e08401526080820151610100840160005b6006811015612b6a57825182529183019190830190600101612b4d565b5050505060a0810151612b816101c0840182612a9c565b5060c001516102809190910152565b6000825160005b81811015612bb15760208186018101518583015201612b97565b81811115612bc0576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612c0e57612bfa838551612b13565b928401926102a09290920191600101612be7565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612c90578151612c4c858251612acb565b8681015160a086015285810151151560c08601526060810151612c7260e0870182612af1565b50608001516101008501526101209093019290850190600101612c37565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612c0e57835183529284019291840191600101612cb9565b60e08101612ce38286612acb565b8360a083015282151560c0830152949350505050565b6101208101612d088288612acb565b8560a083015284151560c0830152612d2360e0830185612af1565b826101008301529695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6102a081016114018284612b13565b600060e082019050612d8b828451612acb565b602083015160a0830152604090920151151560c09091015290565b60008219821115612db957612db9612f25565b500190565b600082612dcd57612dcd612f3b565b500490565b600181815b80851115612e0d578160001904821115612df357612df3612f25565b80851615612e0057918102915b93841c9390800290612dd7565b509250929050565b600061207c60ff841683600082612e2e57506001611401565b81612e3b57506000611401565b8160018114612e515760028114612e5b57612e77565b6001915050611401565b60ff841115612e6c57612e6c612f25565b50506001821b611401565b5060208310610133831016604e8410600b8410161715612e9a575081810a611401565b612ea48383612dd2565b8060001904821115612eb857612eb8612f25565b029392505050565b6000816000190483118215151615612eda57612eda612f25565b500290565b600082821015612ef157612ef1612f25565b500390565b6000600019821415612f0a57612f0a612f25565b5060010190565b600082612f2057612f20612f3b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d4e7b0001217140fcf7e3c1c60040817add6cfa2904036c8e6dc63107237190964736f6c63430008060033";

export class LotteryClaimer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LotteryClaimer> {
    return super.deploy(_LTY, overrides || {}) as Promise<LotteryClaimer>;
  }
  getDeployTransaction(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_LTY, overrides || {});
  }
  attach(address: string): LotteryClaimer {
    return super.attach(address) as LotteryClaimer;
  }
  connect(signer: Signer): LotteryClaimer__factory {
    return super.connect(signer) as LotteryClaimer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryClaimerInterface {
    return new utils.Interface(_abi) as LotteryClaimerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryClaimer {
    return new Contract(address, _abi, signerOrProvider) as LotteryClaimer;
  }
}
