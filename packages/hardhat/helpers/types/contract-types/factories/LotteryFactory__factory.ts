/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LotteryFactory,
  LotteryFactoryInterface,
} from "../LotteryFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_LTY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "LTY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_drawId",
        type: "uint256",
      },
    ],
    name: "_getDrawToTickets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "_getTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint8[5]",
            name: "numbers",
            type: "uint8[5]",
          },
          {
            internalType: "uint256",
            name: "drawNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct LotteryFactory.Ticket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "_getTicketsByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyLottyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyMultipleRandomTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTicketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "drawToTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomGenerator",
    outputs: [
      {
        internalType: "contract IRandomNumberGenerator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_IRandomNumberGenerator",
        type: "address",
      },
    ],
    name: "setRandomNumberGenerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setTicketPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "drawNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "viewTicket",
    outputs: [
      {
        internalType: "uint8[5]",
        name: "",
        type: "uint8[5]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526611c37937e08000600455600060055560006006556000600755600060085534801561002f57600080fd5b5060405162001b4938038062001b49833981016040819052610050916100d8565b61005933610088565b600180546001600160a01b039092166001600160a01b0319928316811790915560028054909216179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ea57600080fd5b81516001600160a01b038116811461010157600080fd5b9392505050565b611a3180620001186000396000f3fe6080604052600436106101355760003560e01c80635d091f38116100ab578063b12e29df1161006f578063b12e29df146103ab578063c6f6d9d9146103cb578063d07f8a43146103e1578063dcbad90d14610401578063efff5e2f14610421578063f2fde38b1461043657600080fd5b80635d091f38146102fc5780636b9a7d011461031c578063715018a61461034b5780638da5cb5b146103605780639f59dc7c1461037e57600080fd5b80632dcb451f116100fd5780632dcb451f146102085780633ccfd60b1461024557806347810b3e1461025a57806350b447121461027a57806354e3c24f146102af5780635b472e30146102cf57600080fd5b806301b084101461013a5780631209b1f614610144578063159816501461016d578063272b0ee51461018d5780632b08e824146101ba575b600080fd5b610142610456565b005b34801561015057600080fd5b5061015a60045481565b6040519081526020015b60405180910390f35b34801561017957600080fd5b5061014261018836600461167b565b61068a565b34801561019957600080fd5b506101ad6101a836600461167b565b6106b9565b60405161016491906117f6565b3480156101c657600080fd5b506101f06101d536600461167b565b600b602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610164565b34801561021457600080fd5b5061021d61075a565b604080519586526020860194909452928401919091526060830152608082015260a001610164565b34801561025157600080fd5b506101426107fb565b34801561026657600080fd5b506001546101f0906001600160a01b031681565b34801561028657600080fd5b5061029a61029536600461167b565b6108c8565b60408051928352901515602083015201610164565b3480156102bb57600080fd5b5061015a6102ca3660046116ad565b6108fc565b3480156102db57600080fd5b5061015a6102ea36600461167b565b600d6020526000908152604090205481565b34801561030857600080fd5b5061014261031736600461167b565b61092d565b34801561032857600080fd5b5061033c61033736600461167b565b610c1c565b6040516101649392919061179d565b34801561035757600080fd5b50610142610cd6565b34801561036c57600080fd5b506000546001600160a01b03166101f0565b34801561038a57600080fd5b5061039e610399366004611629565b610d0c565b6040516101649190611759565b3480156103b757600080fd5b5061039e6103c636600461167b565b610de4565b3480156103d757600080fd5b5061015a60035481565b3480156103ed57600080fd5b506101426103fc366004611629565b610e46565b34801561040d57600080fd5b506009546101f0906001600160a01b031681565b34801561042d57600080fd5b5061015a610e92565b34801561044257600080fd5b50610142610451366004611629565b610f4b565b6000341161046357600080fd5b6002546040805163313ce56760e01b8152905134926000926001600160a01b039091169163313ce56791600480820192602092909190829003018186803b1580156104ad57600080fd5b505afa1580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e591906116cf565b6104f090600a611893565b6004546104fe908490610fe3565b610508919061193e565b60408051808201825260158152746d696e7428616464726573732c75696e743235362960581b60209182015260015482513360248201526044808201869052845180830390910181526064909101845291820180516001600160e01b03166340c10f1960e01b17905291519293507f40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f28429260009283926001600160a01b03909116916105b3919061171e565b6000604051808303816000865af19150503d80600081146105f0576040519150601f19603f3d011682016040523d82523d6000602084013e6105f5565b606091505b509150915081801561061f57508051158061061f57508080602001905181019061061f9190611659565b6106835760405162461bcd60e51b815260206004820152602a60248201527f4c6f7474657279466163746f72793a3a6275794c6f747479546f6b656e3a206d6044820152691a5b9d0819985a5b195960b21b60648201526084015b60405180910390fd5b5050505050565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161067a906117c1565b600455565b6106c161153c565b600a82815481106106d4576106d46119cf565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610704575050509284525050506001820154602082015260029091015460ff16151560409091015292915050565b6002546040516370a0823160e01b815230600482015260009182918291829182916001600160a01b0316906370a082319060240160206040518083038186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611694565b600554600654600754600854945094509450945094509091929394565b6000546001600160a01b031633146108255760405162461bcd60e51b815260040161067a906117c1565b600080546006546040516001600160a01b03909216918381818185875af1925050503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b505060006006559050806108c55760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161067a565b50565b600a81815481106108d857600080fd5b60009182526020909120600390910201600181015460029091015490915060ff1682565b600c602052816000526040600020818154811061091857600080fd5b90600052602060002001600091509150505481565b61093860018261198f565b156109ba5760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a2063616e6e6f7420627579206672616374696f6e206f66206064820152651d1a58dad95d60d21b608482015260a40161067a565b6109cc81670de0b6b3a764000061193e565b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610a0f57600080fd5b505afa158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a479190611694565b1015610aca5760405162461bcd60e51b815260206004820152604660248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f75677468204c545920746f20627579206064820152651d1a58dad95d60d21b608482015260a40161067a565b610adc81670de0b6b3a764000061193e565b600254604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e9060440160206040518083038186803b158015610b2557600080fd5b505afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611694565b1015610bd15760405162461bcd60e51b815260206004820152603e60248201527f4c6f7474657279466163746f72793a3a6275794d756c7469706c6552616e646f60448201527f6d5469636b65743a206e6f7420656e6f7567746820616c6c6f77616e63650000606482015260840161067a565b60005b81811015610c1857610be63382610ff8565b600154610c06906001600160a01b03163330670de0b6b3a7640000611160565b80610c1081611974565b915050610bd4565b5050565b610c24611563565b6000806000600a8581548110610c3c57610c3c6119cf565b60009182526020909120604080516101008101909152916003020181606081018260058282826020028201916000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610c6c57505050928452505050600182015460208083019190915260029092015460ff1615156040918201528251918301519201519097919650945092505050565b6000546001600160a01b03163314610d005760405162461bcd60e51b815260040161067a906117c1565b610d0a600061129e565b565b6001600160a01b0381166000908152600e60205260408120546060919067ffffffffffffffff811115610d4157610d416119e5565b604051908082528060200260200182016040528015610d6a578160200160208202803683370190505b5090506000805b600a54811015610ddb576000818152600b60205260409020546001600160a01b0386811691161415610dc95780838381518110610db057610db06119cf565b6020908102919091010152610dc68260016112ee565b91505b80610dd381611974565b915050610d71565b50909392505050565b6000818152600c6020908152604091829020805483518184028101840190945280845260609392830182828015610e3a57602002820191906000526020600020905b815481526020019060010190808311610e26575b50505050509050919050565b6000546001600160a01b03163314610e705760405162461bcd60e51b815260040161067a906117c1565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6006546008546007546005546002546040516370a0823160e01b8152306004820152600095949392916001600160a01b0316906370a082319060240160206040518083038186803b158015610ee657600080fd5b505afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e9190611694565b610f28919061195d565b610f32919061195d565b610f3c919061195d565b610f46919061195d565b905090565b6000546001600160a01b03163314610f755760405162461bcd60e51b815260040161067a906117c1565b6001600160a01b038116610fda5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067a565b6108c58161129e565b6000610fef828461183c565b90505b92915050565b600354600061100f61100a8484611824565b6112fa565b60408051606081018252828152602081018590526000918101829052600a8054600181018255925280519293509160039091027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801906110729082906005611581565b5060208201516001828101919091556040909201516002909101805460ff1916911515919091179055600a546000916110ab9190611530565b6000818152600b6020908152604080832080546001600160a01b0319166001600160a01b038b16179055868352600c825280832080546001818101835591855283852001859055878452600d9092529091205491925061110b91906112ee565b6000848152600d60209081526040808320939093556001600160a01b0388168252600e9052205461113d9060016112ee565b6001600160a01b039095166000908152600e602052604090209490945550505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916111c4919061171e565b6000604051808303816000865af19150503d8060008114611201576040519150601f19603f3d011682016040523d82523d6000602084013e611206565b606091505b50915091508180156112305750805115806112305750808060200190518101906112309190611659565b6112965760405162461bcd60e51b815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b606482015260840161067a565b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610fef8284611824565b611302611563565b61130a611563565b604080516103208101825260018152600260208201526003918101919091526004606082015260056080820152600660a0820152600760c0820152600860e08201526009610100820152600a610120820152600b610140820152600c610160820152600d610180820152600e6101a0820152600f6101c082015260106101e08201526011610200820152601261022082015260136102408201526014610260820152601561028082015260166102a082015260176102c082015260186102e08201526019610300820152600090815b60058110156114d1576040516bffffffffffffffffffffffff193360601b16602082015242603482015260548101829052607481018490526094810187905260009060199060b4016040516020818303038152906040528051906020012060001c611444919061198f565b9050828160198110611458576114586119cf565b602002015183836019811061146f5761146f6119cf565b6020020151848460198110611486576114866119cf565b6020020185846019811061149c5761149c6119cf565b60ff938416602091909102919091015291169052836114ba81611974565b9450505080806114c990611974565b9150506113d9565b5060005b6005811015611526578181601981106114f0576114f06119cf565b6020020151848260058110611507576115076119cf565b60ff90921660209290920201528061151e81611974565b9150506114d5565b5091949350505050565b6000610fef828461195d565b604051806060016040528061154f611563565b815260006020820181905260409091015290565b6040518060a001604052806005906020820280368337509192915050565b6001830191839082156116045791602002820160005b838211156115d557835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611597565b80156116025782816101000a81549060ff02191690556001016020816000010492830192600103026115d5565b505b50611610929150611614565b5090565b5b808211156116105760008155600101611615565b60006020828403121561163b57600080fd5b81356001600160a01b038116811461165257600080fd5b9392505050565b60006020828403121561166b57600080fd5b8151801515811461165257600080fd5b60006020828403121561168d57600080fd5b5035919050565b6000602082840312156116a657600080fd5b5051919050565b600080604083850312156116c057600080fd5b50508035926020909101359150565b6000602082840312156116e157600080fd5b815160ff8116811461165257600080fd5b8060005b600581101561171857815160ff168452602093840193909101906001016116f6565b50505050565b6000825160005b8181101561173f5760208186018101518583015201611725565b8181111561174e576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561179157835183529284019291840191600101611775565b50909695505050505050565b60e081016117ab82866116f2565b8360a083015282151560c0830152949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060e0820190506118098284516116f2565b602083015160a0830152604090920151151560c09091015290565b60008219821115611837576118376119a3565b500190565b60008261184b5761184b6119b9565b500490565b600181815b8085111561188b578160001904821115611871576118716119a3565b8085161561187e57918102915b93841c9390800290611855565b509250929050565b6000610fef60ff8416836000826118ac57506001610ff2565b816118b957506000610ff2565b81600181146118cf57600281146118d9576118f5565b6001915050610ff2565b60ff8411156118ea576118ea6119a3565b50506001821b610ff2565b5060208310610133831016604e8410600b8410161715611918575081810a610ff2565b6119228383611850565b8060001904821115611936576119366119a3565b029392505050565b6000816000190483118215151615611958576119586119a3565b500290565b60008282101561196f5761196f6119a3565b500390565b6000600019821415611988576119886119a3565b5060010190565b60008261199e5761199e6119b9565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202eac59131fac346a49a9e5fdca7ba31b6ac81def4f81c3b849bf53ab2ed9a51b64736f6c63430008060033";

export class LotteryFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LotteryFactory> {
    return super.deploy(_LTY, overrides || {}) as Promise<LotteryFactory>;
  }
  getDeployTransaction(
    _LTY: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_LTY, overrides || {});
  }
  attach(address: string): LotteryFactory {
    return super.attach(address) as LotteryFactory;
  }
  connect(signer: Signer): LotteryFactory__factory {
    return super.connect(signer) as LotteryFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryFactoryInterface {
    return new utils.Interface(_abi) as LotteryFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryFactory {
    return new Contract(address, _abi, signerOrProvider) as LotteryFactory;
  }
}
