/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomNumberGenerator,
  RandomNumberGeneratorInterface,
} from "../RandomNumberGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_lottery",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "randomValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "expand",
    outputs: [
      {
        internalType: "uint256[]",
        name: "expandedValues",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userProvidedSeed",
        type: "uint256",
      },
    ],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lottery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    name: "setKeyHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawLINK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d85380380610d8583398101604081905261002f916101c9565b6001600160601b0319606086811b821660a05285901b16608052338060008161009f5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b03848116919091179091558116156100cf576100cf81610102565b505050600392909255600455600580546001600160a01b0319166001600160a01b03909216919091179055506102209050565b6001600160a01b03811633141561015b5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610096565b600280546001600160a01b0319166001600160a01b03838116918217909255600154604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b80516001600160a01b03811681146101c457600080fd5b919050565b600080600080600060a086880312156101e157600080fd5b6101ea866101ad565b94506101f8602087016101ad565b93506040860151925060608601519150610214608087016101ad565b90509295509295909350565b60805160601c60a05160601c610b256102606000396000818161037701526106f001526000818161041c0152818161056401526106c10152610b256000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063985447101161006657806398544710146101ab578063b37217a4146101be578063ba13a572146101d1578063f2fde38b146101e457600080fd5b80638da5cb5b1461016057806394985ddd14610185578063983fbab21461019857600080fd5b80637390c786116100c85780637390c7861461012857806379ba5097146101305780637af6942f14610138578063874b3afc1461014057600080fd5b806342619f66146100ef578063540b3a171461010b57806369fe0e2d14610113575b600080fd5b6100f860065481565b6040519081526020015b60405180910390f35b6003546100f8565b610126610121366004610976565b6101f7565b005b6006546100f8565b610126610204565b6004546100f8565b61015361014e36600461098f565b6102b7565b6040516101029190610a36565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610102565b61012661019336600461098f565b61036c565b6101266101a636600461092a565b6103ee565b6101266101b9366004610976565b6104d6565b6100f86101cc366004610976565b6104e3565b60055461016d906001600160a01b031681565b6101266101f2366004610908565b610654565b6101ff610668565b600455565b6002546001600160a01b0316331461025c5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b600180546001600160a01b0319808216339081179093556002805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60608167ffffffffffffffff8111156102d2576102d2610ad9565b6040519080825280602002602001820160405280156102fb578160200160208202803683370190505b50905060005b828110156103655760408051602081018690529081018290526060016040516020818303038152906040528051906020012060001c82828151811061034857610348610ac3565b60209081029190910101528061035d81610a92565b915050610301565b5092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103e45760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610253565b60065550565b5050565b6103f6610668565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561046057600080fd5b505af1158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610954565b6103ea5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204c494e4b60881b6044820152606401610253565b6104de610668565b600355565b6005546000906001600160a01b031633146105405760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c79204c6f74746572792063616e2063616c6c2066756e6374696f6e00006044820152606401610253565b600480546040516370a0823160e01b81523092810192909252906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156105a657600080fd5b505afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de91906109b1565b10156106405760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610253565b61064c600354836106bd565b90505b919050565b61065c610668565b61066581610846565b50565b6001546001600160a01b031633146106bb5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610253565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161072d929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161075a939291906109ca565b602060405180830381600087803b15801561077457600080fd5b505af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610954565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610806906001610a7a565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b6001600160a01b03811633141561089f5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610253565b600280546001600160a01b0319166001600160a01b03838116918217909255600154604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b80356001600160a01b038116811461064f57600080fd5b60006020828403121561091a57600080fd5b610923826108f1565b9392505050565b6000806040838503121561093d57600080fd5b610946836108f1565b946020939093013593505050565b60006020828403121561096657600080fd5b8151801515811461092357600080fd5b60006020828403121561098857600080fd5b5035919050565b600080604083850312156109a257600080fd5b50508035926020909101359150565b6000602082840312156109c357600080fd5b5051919050565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610a0c578581018301518582016080015282016109f0565b81811115610a1e576000608083870101525b50601f01601f19169290920160800195945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610a6e57835183529284019291840191600101610a52565b50909695505050505050565b60008219821115610a8d57610a8d610aad565b500190565b6000600019821415610aa657610aa6610aad565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220600ed3348a78e376e9b2e5206455b86cd46e7c8d2f9068fc72c2a2bc58f5bfa064736f6c63430008060033";

export class RandomNumberGenerator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _lottery: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomNumberGenerator> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _lottery,
      overrides || {}
    ) as Promise<RandomNumberGenerator>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _linkToken: string,
    _keyHash: BytesLike,
    _fee: BigNumberish,
    _lottery: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      _keyHash,
      _fee,
      _lottery,
      overrides || {}
    );
  }
  attach(address: string): RandomNumberGenerator {
    return super.attach(address) as RandomNumberGenerator;
  }
  connect(signer: Signer): RandomNumberGenerator__factory {
    return super.connect(signer) as RandomNumberGenerator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberGeneratorInterface {
    return new utils.Interface(_abi) as RandomNumberGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberGenerator;
  }
}
